{"version":3,"file":"index.js","sources":["../../../../../src/components/hds/form/radio-card/index.hbs","../../../../../src/components/hds/form/radio-card/index.js"],"sourcesContent":["import { precompileTemplate } from \"@ember/template-compilation\";\nexport default precompileTemplate(\"{{!\\n  Copyright (c) HashiCorp, Inc.\\n  SPDX-License-Identifier: MPL-2.0\\n}}\\n<label class={{this.classNames}} {{did-insert this.setAriaDescribedBy}} {{style maxWidth=@maxWidth}}>\\n  <span class=\\\"hds-form-radio-card__content\\\">\\n    {{yield (hash Icon=(component \\\"flight-icon\\\" size=\\\"24\\\" isInlineBlock=false))}}\\n    {{yield (hash Label=(component \\\"hds/form/radio-card/label\\\"))}}\\n    {{yield (hash Badge=(component \\\"hds/badge\\\"))}}\\n    {{yield (hash Description=(component \\\"hds/form/radio-card/description\\\"))}}\\n    {{yield (hash Generic=(component \\\"hds/yield\\\"))}}\\n  </span>\\n  <span class=\\\"hds-form-radio-card__control-wrapper\\\">\\n    <Hds::Form::Radio::Base\\n      class=\\\"hds-form-radio-card__control\\\"\\n      @value={{@value}}\\n      name={{@name}}\\n      checked={{@checked}}\\n      disabled={{@disabled}}\\n      aria-describedby={{this.ariaDescribedBy}}\\n      ...attributes\\n    />\\n  </span>\\n</label>\")","/**\n * Copyright (c) HashiCorp, Inc.\n * SPDX-License-Identifier: MPL-2.0\n */\n\nimport Component from '@glimmer/component';\nimport { tracked } from '@glimmer/tracking';\nimport { action } from '@ember/object';\nimport { assert } from '@ember/debug';\nimport { schedule } from '@ember/runloop';\nimport { setAriaDescribedBy } from '../../../../utils/hds-set-aria-described-by';\n\nexport const DEFAULT_CONTROL_POSITION = 'bottom';\nexport const DEFAULT_ALIGNMENT = 'left';\nexport const CONTROL_POSITIONS = ['bottom', 'left'];\nexport const ALIGNMENTS = ['left', 'center'];\n\nexport default class HdsFormRadioCardIndexComponent extends Component {\n  @tracked ariaDescribedBy = this.args.extraAriaDescribedBy;\n  @tracked descriptors = [];\n\n  @action\n  setAriaDescribedBy() {\n    // we schedule this afterRender to capture all descriptors registered onInsert\n    schedule('afterRender', () => {\n      setAriaDescribedBy(this);\n    });\n  }\n\n  /**\n   * Sets the position of the control\n   * Accepted values: buttom, left\n   *\n   * @param type\n   * @type {string}\n   * @default 'bottom'\n   */\n  get controlPosition() {\n    let { controlPosition = DEFAULT_CONTROL_POSITION } = this.args;\n\n    assert(\n      `@controlPosition for \"Hds::Form::RadioCard\" must be one of the following: ${CONTROL_POSITIONS.join(\n        ', '\n      )}; received: ${controlPosition}`,\n      CONTROL_POSITIONS.includes(controlPosition)\n    );\n\n    return controlPosition;\n  }\n\n  /**\n   * Sets the alignment of the content\n   * Accepted values: left, center\n   *\n   * @param alignnment\n   * @type {string}\n   * @default 'left'\n   */\n  get alignment() {\n    let { alignment = DEFAULT_ALIGNMENT } = this.args;\n\n    assert(\n      `@alignment for \"Hds::Form::RadioCard\" must be one of the following: ${ALIGNMENTS.join(\n        ', '\n      )}; received: ${alignment}`,\n      ALIGNMENTS.includes(alignment)\n    );\n\n    return alignment;\n  }\n\n  /**\n   * Get the class names to apply to the component.\n   * @method classNames\n   * @return {string} The \"class\" attribute to apply to the component.\n   */\n  get classNames() {\n    let classes = ['hds-form-radio-card'];\n\n    if (this.args.checked) {\n      classes.push('hds-form-radio-card--checked');\n    }\n    if (this.args.disabled) {\n      classes.push('hds-form-radio-card--disabled');\n    }\n    if (this.args.maxWidth) {\n      classes.push('hds-form-radio-card--has-fixed-width');\n    } else {\n      classes.push('hds-form-radio-card--has-fluid-width');\n    }\n\n    // add a class based on the @controlPosition argument\n    classes.push(`hds-form-radio-card--control-${this.controlPosition}`);\n\n    // add a class based on the @alignment argument\n    classes.push(`hds-form-radio-card--align-${this.alignment}`);\n\n    return classes.join(' ');\n  }\n}\n"],"names":["DEFAULT_CONTROL_POSITION","DEFAULT_ALIGNMENT","CONTROL_POSITIONS","ALIGNMENTS","HdsFormRadioCardIndexComponent","_class","Component","constructor","args","_initializerDefineProperty","_descriptor","_descriptor2","setAriaDescribedBy","schedule","controlPosition","assert","join","includes","alignment","classNames","classes","checked","push","disabled","maxWidth","_applyDecoratedDescriptor","prototype","tracked","configurable","enumerable","writable","initializer","extraAriaDescribedBy","action","Object","getOwnPropertyDescriptor","setComponentTemplate","TEMPLATE"],"mappings":"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"}