{"version":3,"file":"index.js","sources":["../../../../src/components/hds/badge-count/index.hbs","../../../../src/components/hds/badge-count/index.js"],"sourcesContent":["import { precompileTemplate } from \"@ember/template-compilation\";\nexport default precompileTemplate(\"{{!\\n  Copyright (c) HashiCorp, Inc.\\n  SPDX-License-Identifier: MPL-2.0\\n}}\\n<div class={{this.classNames}} ...attributes>\\n  {{@text}}\\n</div>\")","/**\n * Copyright (c) HashiCorp, Inc.\n * SPDX-License-Identifier: MPL-2.0\n */\n\nimport Component from '@glimmer/component';\nimport { assert } from '@ember/debug';\n\nexport const DEFAULT_SIZE = 'medium';\nexport const DEFAULT_TYPE = 'filled';\nexport const DEFAULT_COLOR = 'neutral';\nexport const SIZES = ['small', 'medium', 'large'];\nexport const TYPES = ['filled', 'inverted', 'outlined'];\nexport const COLORS = ['neutral', 'neutral-dark-mode'];\n\nexport default class HdsBadgeCountIndexComponent extends Component {\n  /**\n   * Sets the size for the component\n   * Accepted sizes: small, medium, large\n   *\n   * @param size\n   * @type {string}\n   * @default 'medium'\n   */\n  get size() {\n    let { size = DEFAULT_SIZE } = this.args;\n\n    assert(\n      `@size for \"Hds::BadgeCount\" must be one of the following: ${SIZES.join(\n        ', '\n      )}; received: ${size}`,\n      SIZES.includes(size)\n    );\n\n    return size;\n  }\n\n  /**\n   * Sets the type of the component\n   * Accepted values: filled, inverted, outlined\n   *\n   * @param type\n   * @type {string}\n   * @default 'filled'\n   */\n  get type() {\n    let { type = DEFAULT_TYPE } = this.args;\n\n    assert(\n      `@type for \"Hds::BadgeCount\" must be one of the following: ${TYPES.join(\n        ', '\n      )}; received: ${type}`,\n      TYPES.includes(type)\n    );\n\n    return type;\n  }\n\n  /**\n   * Sets the color scheme for the component\n   * Accepted colors: neutral, neutral-dark-mode\n   *\n   * @param color\n   * @type {string}\n   * @default 'neutral'\n   */\n  get color() {\n    let { color = DEFAULT_COLOR } = this.args;\n\n    assert(\n      `@color for \"Hds::BadgeCount\" must be one of the following: ${COLORS.join(\n        ', '\n      )}; received: ${color}`,\n      COLORS.includes(color)\n    );\n\n    return color;\n  }\n\n  /**\n   * Get the class names to apply to the component.\n   * @method BadgeCount#classNames\n   * @return {string} The \"class\" attribute to apply to the component.\n   */\n  get classNames() {\n    let classes = ['hds-badge-count'];\n\n    // add a class based on the @size argument\n    classes.push(`hds-badge-count--size-${this.size}`);\n\n    // add a class based on the @type argument\n    classes.push(`hds-badge-count--type-${this.type}`);\n\n    // add a class based on the @color argument\n    classes.push(`hds-badge-count--color-${this.color}`);\n\n    return classes.join(' ');\n  }\n}\n"],"names":["DEFAULT_SIZE","DEFAULT_TYPE","DEFAULT_COLOR","SIZES","TYPES","COLORS","HdsBadgeCountIndexComponent","Component","size","args","assert","join","includes","type","color","classNames","classes","push","setComponentTemplate","TEMPLATE"],"mappings":";;;;;AACA,eAAe,kBAAkB,CAAC,kJAAkJ;;ACDpL;AACA;AACA;AACA;;AAKO,MAAMA,YAAY,GAAG,SAAQ;AAC7B,MAAMC,YAAY,GAAG,SAAQ;AAC7B,MAAMC,aAAa,GAAG,UAAS;AAC/B,MAAMC,KAAK,GAAG,CAAC,OAAO,EAAE,QAAQ,EAAE,OAAO,EAAC;AAC1C,MAAMC,KAAK,GAAG,CAAC,QAAQ,EAAE,UAAU,EAAE,UAAU,EAAC;MAC1CC,MAAM,GAAG,CAAC,SAAS,EAAE,mBAAmB,EAAC;AAEvC,MAAMC,2BAA2B,SAASC,SAAS,CAAC;AACjE;AACF;AACA;AACA;AACA;AACA;AACA;AACA;EACE,IAAIC,IAAIA,GAAG;IACT,IAAI;AAAEA,MAAAA,IAAI,GAAGR,YAAAA;KAAc,GAAG,IAAI,CAACS,IAAI,CAAA;AAEvCC,IAAAA,MAAM,CACH,CAA4DP,0DAAAA,EAAAA,KAAK,CAACQ,IAAI,CACrE,IACF,CAAE,CAAA,YAAA,EAAcH,IAAK,CAAA,CAAC,EACtBL,KAAK,CAACS,QAAQ,CAACJ,IAAI,CACrB,CAAC,CAAA;AAED,IAAA,OAAOA,IAAI,CAAA;AACb,GAAA;;AAEA;AACF;AACA;AACA;AACA;AACA;AACA;AACA;EACE,IAAIK,IAAIA,GAAG;IACT,IAAI;AAAEA,MAAAA,IAAI,GAAGZ,YAAAA;KAAc,GAAG,IAAI,CAACQ,IAAI,CAAA;AAEvCC,IAAAA,MAAM,CACH,CAA4DN,0DAAAA,EAAAA,KAAK,CAACO,IAAI,CACrE,IACF,CAAE,CAAA,YAAA,EAAcE,IAAK,CAAA,CAAC,EACtBT,KAAK,CAACQ,QAAQ,CAACC,IAAI,CACrB,CAAC,CAAA;AAED,IAAA,OAAOA,IAAI,CAAA;AACb,GAAA;;AAEA;AACF;AACA;AACA;AACA;AACA;AACA;AACA;EACE,IAAIC,KAAKA,GAAG;IACV,IAAI;AAAEA,MAAAA,KAAK,GAAGZ,aAAAA;KAAe,GAAG,IAAI,CAACO,IAAI,CAAA;AAEzCC,IAAAA,MAAM,CACH,CAA6DL,2DAAAA,EAAAA,MAAM,CAACM,IAAI,CACvE,IACF,CAAE,CAAA,YAAA,EAAcG,KAAM,CAAA,CAAC,EACvBT,MAAM,CAACO,QAAQ,CAACE,KAAK,CACvB,CAAC,CAAA;AAED,IAAA,OAAOA,KAAK,CAAA;AACd,GAAA;;AAEA;AACF;AACA;AACA;AACA;EACE,IAAIC,UAAUA,GAAG;AACf,IAAA,IAAIC,OAAO,GAAG,CAAC,iBAAiB,CAAC,CAAA;;AAEjC;IACAA,OAAO,CAACC,IAAI,CAAE,CAAA,sBAAA,EAAwB,IAAI,CAACT,IAAK,EAAC,CAAC,CAAA;;AAElD;IACAQ,OAAO,CAACC,IAAI,CAAE,CAAA,sBAAA,EAAwB,IAAI,CAACJ,IAAK,EAAC,CAAC,CAAA;;AAElD;IACAG,OAAO,CAACC,IAAI,CAAE,CAAA,uBAAA,EAAyB,IAAI,CAACH,KAAM,EAAC,CAAC,CAAA;AAEpD,IAAA,OAAOE,OAAO,CAACL,IAAI,CAAC,GAAG,CAAC,CAAA;AAC1B,GAAA;AACF,CAAA;AAACO,oBAAA,CAAAC,QAAA,EAnFoBb,2BAA2B,CAAA;;;;"}