{"version":3,"file":"index.js","sources":["../../../../src/components/hds/table/index.hbs","../../../../src/components/hds/table/index.js"],"sourcesContent":["import { precompileTemplate } from \"@ember/template-compilation\";\nexport default precompileTemplate(\"{{!\\n  Copyright (c) HashiCorp, Inc.\\n  SPDX-License-Identifier: MPL-2.0\\n}}\\n<table class={{this.classNames}} ...attributes>\\n  {{#if @columns}}\\n    <caption class=\\\"sr-only\\\" aria-live=\\\"polite\\\">{{@caption}} {{this.sortedMessageText}}</caption>\\n  {{else if @caption}}\\n    <caption class=\\\"sr-only\\\">{{@caption}}</caption>\\n  {{/if}}\\n  <thead class=\\\"hds-table__thead\\\">\\n    {{#if @columns}}\\n      <Hds::Table::Tr>\\n        {{#each @columns as |column|}}\\n          {{#if column.isSortable}}\\n            <Hds::Table::ThSort\\n              @sortOrder={{if (eq column.key this.sortBy) this.sortOrder}}\\n              @onClick={{fn this.setSortBy column.key}}\\n              @align={{column.align}}\\n              @width={{column.width}}\\n            >\\n              {{column.label}}\\n            </Hds::Table::ThSort>\\n          {{else}}\\n            <Hds::Table::Th\\n              @align={{column.align}}\\n              @width={{column.width}}\\n              @isVisuallyHidden={{column.isVisuallyHidden}}\\n            >{{column.label}}</Hds::Table::Th>\\n          {{/if}}\\n        {{/each}}\\n      </Hds::Table::Tr>\\n    {{else}}\\n      {{yield\\n        (hash\\n          Tr=(component \\\"hds/table/tr\\\")\\n          Th=(component \\\"hds/table/th\\\")\\n          ThSort=(component \\\"hds/table/th-sort\\\")\\n          sortBy=this.sortBy\\n          sortOrder=this.sortOrder\\n          setSortBy=this.setSortBy\\n        )\\n        to=\\\"head\\\"\\n      }}\\n    {{/if}}\\n  </thead>\\n  <tbody class=\\\"hds-table__tbody\\\">\\n    {{#if @columns}}\\n      {{! ----------------------------------------------------------------------------------------\\n        IMPORTANT: we loop on the `model` array and for each record\\n        we yield the Tr/Td/Th elements _and_ the record itself as `data`\\n        this means the consumer will *have to* use the `data` key to access it in their template\\n      -------------------------------------------------------------------------------------------- }}\\n      {{#each (sort-by this.getSortCriteria @model) key=this.identityKey as |record|}}\\n        {{yield\\n          (hash\\n            Tr=(component \\\"hds/table/tr\\\")\\n            Th=(component \\\"hds/table/th\\\" scope=\\\"row\\\")\\n            Td=(component \\\"hds/table/td\\\" align=@align)\\n            data=record\\n          )\\n          to=\\\"body\\\"\\n        }}\\n      {{/each}}\\n    {{else}}\\n      {{yield\\n        (hash\\n          Tr=(component \\\"hds/table/tr\\\")\\n          Th=(component \\\"hds/table/th\\\" scope=\\\"row\\\")\\n          Td=(component \\\"hds/table/td\\\" align=@align)\\n          sortBy=this.sortBy\\n          sortOrder=this.sortOrder\\n        )\\n        to=\\\"body\\\"\\n      }}\\n    {{/if}}\\n  </tbody>\\n</table>\")","/**\n * Copyright (c) HashiCorp, Inc.\n * SPDX-License-Identifier: MPL-2.0\n */\n\nimport Component from '@glimmer/component';\nimport { tracked } from '@glimmer/tracking';\nimport { action } from '@ember/object';\nimport { assert } from '@ember/debug';\n\nconst DENSITIES = ['short', 'medium', 'tall'];\nconst DEFAULT_DENSITY = 'medium';\nconst VALIGNMENTS = ['top', 'middle', 'baseline'];\nconst DEFAULT_VALIGN = 'top';\n\nexport default class HdsTableIndexComponent extends Component {\n  @tracked sortBy = this.args.sortBy;\n  @tracked sortOrder = this.args.sortOrder || 'asc';\n\n  /**\n   * @param getSortCriteria\n   * @type {string | function}\n   * @default sortBy:sortOrder\n   * @description Returns the sort criteria\n   */\n  get getSortCriteria() {\n    // get the current column\n    const currentColumn = this.args?.columns?.find(\n      (column) => column.key === this.sortBy\n    );\n    if (\n      // check if there is a custom sorting function associated with the current `sortBy` column (we assume the column has `isSortable`)\n      currentColumn?.sortingFunction &&\n      typeof currentColumn.sortingFunction === 'function'\n    ) {\n      return currentColumn.sortingFunction;\n    } else {\n      // otherwise fallback to the default format \"sortBy:sortOrder\"\n      return `${this.sortBy}:${this.sortOrder}`;\n    }\n  }\n\n  /**\n   * @param identityKey\n   * @type {string}\n   * @default '@identity'\n   * @description Returns the key to use for the table rows to provide more granular control. If no identityKey is defined, Ember's default `@identity` is used. See https://api.emberjs.com/ember/release/classes/Ember.Templates.helpers/methods/each?anchor=each\n   * this would be relevant for any table that would have data that could update or change, i.e., polling.\n   */\n  get identityKey() {\n    // we have to provide a way for the consumer to pass undefined because Ember tries to interpret undefined as missing an arg and therefore falls back to the default\n    if (this.args.identityKey === 'none') {\n      return undefined;\n    } else {\n      return this.args.identityKey ?? '@identity';\n    }\n  }\n\n  /**\n   * @param sortedMessageText\n   * @type {string}\n   * @default ''\n   * @description Returns the text to display in the sorted message. If no text is defined, the default text is used.\n   */\n  get sortedMessageText() {\n    if (this.args.sortedMessageText) {\n      return this.args.sortedMessageText;\n    } else if (this.sortBy && this.sortOrder) {\n      // we should allow the user to define a custom value here (e.g., for i18n) - tracked with HDS-965\n      return `Sorted by ${this.sortBy} ${this.sortOrder}ending`;\n    } else {\n      return '';\n    }\n  }\n\n  /**\n   * @param isStriped\n   * @type {boolean}\n   * @default false\n   * @description Determines whether the table rows should have alternating background colors; defaults to false.\n   */\n  get isStriped() {\n    return this.args.isStriped ?? false;\n  }\n\n  /**\n   * @param isFixedLayout\n   * @type {boolean}\n   * @default false\n   * @description Determines whether the table-display should be set to fixed; meaning, the table columns are of equal width no matter the content; defaults to false.\n   */\n  get isFixedLayout() {\n    return this.args.isFixedLayout ?? false;\n  }\n\n  /**\n   * @param density\n   * @type {string}\n   * @default 'medium'\n   * @description Determines the density of the table cells; options are \"short\", \"medium\" and \"tall\". If no density is defined, \"medium\" is used.\n   */\n  get density() {\n    let { density = DEFAULT_DENSITY } = this.args;\n\n    assert(\n      `@density for \"Hds::Table\" must be one of the following: ${DENSITIES.join(\n        ', '\n      )}; received: ${density}`,\n      DENSITIES.includes(density)\n    );\n\n    return density;\n  }\n\n  /**\n   * @param valign\n   * @type {string}\n   * @default 'top'\n   * @description Determines the vertical alignment of the table cells; options are: \"top\", \"middle\", \"baseline\". If no valign is defined, \"top\" is used.\n   */\n  get valign() {\n    let { valign = DEFAULT_VALIGN } = this.args;\n\n    assert(\n      `@valign for \"Hds::Table\" must be one of the following: ${VALIGNMENTS.join(\n        ', '\n      )}; received: ${valign}`,\n      VALIGNMENTS.includes(valign)\n    );\n\n    return valign;\n  }\n\n  /**\n   * Get the class names to apply to the component.\n   * @method classNames\n   * @return {string} The \"class\" attribute to apply to the component.\n   */\n  get classNames() {\n    let classes = ['hds-table'];\n\n    // add a class based on the @isStriped argument\n    if (this.isStriped) {\n      classes.push('hds-table--striped');\n    }\n\n    // add a class based on the @isFixedLayout argument\n    if (this.isFixedLayout) {\n      classes.push('hds-table--layout-fixed');\n    }\n\n    // add a class based on the @density argument\n    if (this.density) {\n      classes.push(`hds-table--density-${this.density}`);\n    }\n\n    // add a class based on the @valign argument\n    if (this.valign) {\n      classes.push(`hds-table--valign-${this.valign}`);\n    }\n\n    return classes.join(' ');\n  }\n\n  @action\n  setSortBy(column) {\n    if (this.sortBy === column) {\n      // check to see if the column is already sorted and invert the sort order if so\n      this.sortOrder = this.sortOrder === 'asc' ? 'desc' : 'asc';\n    } else {\n      // otherwise, set the sort order to ascending\n      this.sortBy = column;\n      this.sortOrder = 'asc';\n    }\n\n    let { onSort } = this.args;\n\n    if (typeof onSort === 'function') {\n      onSort(this.sortBy, this.sortOrder);\n    }\n  }\n}\n"],"names":["DENSITIES","DEFAULT_DENSITY","VALIGNMENTS","DEFAULT_VALIGN","HdsTableIndexComponent","_class","Component","constructor","args","_initializerDefineProperty","_descriptor","_descriptor2","getSortCriteria","currentColumn","columns","find","column","key","sortBy","sortingFunction","sortOrder","identityKey","undefined","sortedMessageText","isStriped","isFixedLayout","density","assert","join","includes","valign","classNames","classes","push","setSortBy","onSort","_applyDecoratedDescriptor","prototype","tracked","configurable","enumerable","writable","initializer","action","Object","getOwnPropertyDescriptor","setComponentTemplate","TEMPLATE"],"mappings":"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"}