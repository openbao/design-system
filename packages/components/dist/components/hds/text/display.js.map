{"version":3,"file":"display.js","sources":["../../../../src/components/hds/text/display.hbs","../../../../src/components/hds/text/display.js"],"sourcesContent":["import { precompileTemplate } from \"@ember/template-compilation\";\nexport default precompileTemplate(\"{{!\\n  Copyright (c) HashiCorp, Inc.\\n  SPDX-License-Identifier: MPL-2.0\\n}}\\n<Hds::Text\\n  @group=\\\"display\\\"\\n  @size={{this.size}}\\n  @weight={{this.weight}}\\n  @align={{@align}}\\n  @color={{@color}}\\n  @tag={{@tag}}\\n  ...attributes\\n>{{yield}}</Hds::Text>\")","/**\n * Copyright (c) HashiCorp, Inc.\n * SPDX-License-Identifier: MPL-2.0\n */\n\nimport Component from '@glimmer/component';\nimport { assert } from '@ember/debug';\n\n// notice: only some combinations of size + font-weight are allowed (per design specs)\n// see: https://www.figma.com/file/oQsMzMMnynfPWpMEt91OpH/HDS-Product---Foundations?node-id=1262%3A9192\n\nexport const DEFAULT_SIZE = '200';\nexport const AVAILABLE_SIZES = [500, 400, 300, 200, 100];\n\nexport const DEFAULT_WEIGHTS_PER_SIZE = {\n  500: ['bold'],\n  400: ['semibold'],\n  300: ['semibold'],\n  200: ['semibold'],\n  100: ['medium'],\n};\nexport const AVAILABLE_WEIGHTS_PER_SIZE = {\n  500: ['bold'],\n  400: ['medium', 'semibold', 'bold'],\n  300: ['medium', 'semibold', 'bold'],\n  200: ['semibold'],\n  100: ['medium'],\n};\n\nexport default class HdsTextDisplayComponent extends Component {\n  /**\n   * Sets the \"size\" for the text\n   * Accepted values: see AVAILABLE_SIZES\n   *\n   * @type {string}\n   *\n   * @param size\n   */\n  get size() {\n    let { size = DEFAULT_SIZE } = this.args;\n\n    // let's be a bit forgiving with the consumers\n    if (typeof size === 'string') {\n      size = parseInt(size, 10);\n    }\n\n    assert(\n      `@size for \"Hds::Text::Display\" must be one of the following: ${AVAILABLE_SIZES.join(\n        ', '\n      )}; received: ${size}`,\n      AVAILABLE_SIZES.includes(size)\n    );\n\n    return size;\n  }\n\n  /**\n   * Sets the \"weight\" for the text\n   * Accepted values: see AVAILABLE_WEIGHTS_PER_SIZE\n   *\n   * @type {string}\n   *\n   * @param variant\n   */\n  get weight() {\n    let { weight } = this.args;\n\n    if (weight) {\n      const availableWeights = AVAILABLE_WEIGHTS_PER_SIZE[this.size];\n      assert(\n        `@weight for \"Hds::Text::Display\" with @size=${\n          this.size\n        } must be one of the following: ${availableWeights.join(\n          ', '\n        )}; received: ${weight}`,\n        availableWeights.includes(weight)\n      );\n    } else {\n      // use the default (first item in the array)\n      weight = DEFAULT_WEIGHTS_PER_SIZE[this.size];\n    }\n\n    return weight;\n  }\n}\n"],"names":["DEFAULT_SIZE","AVAILABLE_SIZES","DEFAULT_WEIGHTS_PER_SIZE","AVAILABLE_WEIGHTS_PER_SIZE","HdsTextDisplayComponent","Component","size","args","parseInt","assert","join","includes","weight","availableWeights","setComponentTemplate","TEMPLATE"],"mappings":";;;;;AACA,eAAe,kBAAkB,CAAC,sQAAsQ;;ACDxS;AACA;AACA;AACA;;AAQO,MAAMA,YAAY,GAAG,MAAK;AACpBC,MAAAA,eAAe,GAAG,CAAC,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAC;AAEjD,MAAMC,wBAAwB,GAAG;EACtC,GAAG,EAAE,CAAC,MAAM,CAAC;EACb,GAAG,EAAE,CAAC,UAAU,CAAC;EACjB,GAAG,EAAE,CAAC,UAAU,CAAC;EACjB,GAAG,EAAE,CAAC,UAAU,CAAC;EACjB,GAAG,EAAE,CAAC,QAAQ,CAAA;AAChB,EAAC;AACM,MAAMC,0BAA0B,GAAG;EACxC,GAAG,EAAE,CAAC,MAAM,CAAC;AACb,EAAA,GAAG,EAAE,CAAC,QAAQ,EAAE,UAAU,EAAE,MAAM,CAAC;AACnC,EAAA,GAAG,EAAE,CAAC,QAAQ,EAAE,UAAU,EAAE,MAAM,CAAC;EACnC,GAAG,EAAE,CAAC,UAAU,CAAC;EACjB,GAAG,EAAE,CAAC,QAAQ,CAAA;AAChB,EAAC;AAEc,MAAMC,uBAAuB,SAASC,SAAS,CAAC;AAC7D;AACF;AACA;AACA;AACA;AACA;AACA;AACA;EACE,IAAIC,IAAIA,GAAG;IACT,IAAI;AAAEA,MAAAA,IAAI,GAAGN,YAAAA;KAAc,GAAG,IAAI,CAACO,IAAI,CAAA;;AAEvC;AACA,IAAA,IAAI,OAAOD,IAAI,KAAK,QAAQ,EAAE;AAC5BA,MAAAA,IAAI,GAAGE,QAAQ,CAACF,IAAI,EAAE,EAAE,CAAC,CAAA;AAC3B,KAAA;AAEAG,IAAAA,MAAM,CACH,CAA+DR,6DAAAA,EAAAA,eAAe,CAACS,IAAI,CAClF,IACF,CAAE,CAAA,YAAA,EAAcJ,IAAK,CAAA,CAAC,EACtBL,eAAe,CAACU,QAAQ,CAACL,IAAI,CAC/B,CAAC,CAAA;AAED,IAAA,OAAOA,IAAI,CAAA;AACb,GAAA;;AAEA;AACF;AACA;AACA;AACA;AACA;AACA;AACA;EACE,IAAIM,MAAMA,GAAG;IACX,IAAI;AAAEA,MAAAA,MAAAA;KAAQ,GAAG,IAAI,CAACL,IAAI,CAAA;AAE1B,IAAA,IAAIK,MAAM,EAAE;AACV,MAAA,MAAMC,gBAAgB,GAAGV,0BAA0B,CAAC,IAAI,CAACG,IAAI,CAAC,CAAA;MAC9DG,MAAM,CACH,+CACC,IAAI,CAACH,IACN,CAAiCO,+BAAAA,EAAAA,gBAAgB,CAACH,IAAI,CACrD,IACF,CAAE,CAAcE,YAAAA,EAAAA,MAAO,EAAC,EACxBC,gBAAgB,CAACF,QAAQ,CAACC,MAAM,CAClC,CAAC,CAAA;AACH,KAAC,MAAM;AACL;AACAA,MAAAA,MAAM,GAAGV,wBAAwB,CAAC,IAAI,CAACI,IAAI,CAAC,CAAA;AAC9C,KAAA;AAEA,IAAA,OAAOM,MAAM,CAAA;AACf,GAAA;AACF,CAAA;AAACE,oBAAA,CAAAC,QAAA,EAvDoBX,uBAAuB,CAAA;;;;"}