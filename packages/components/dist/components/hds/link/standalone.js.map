{"version":3,"file":"standalone.js","sources":["../../../../src/components/hds/link/standalone.hbs","../../../../src/components/hds/link/standalone.js"],"sourcesContent":["import { precompileTemplate } from \"@ember/template-compilation\";\nexport default precompileTemplate(\"<Hds::Interactive\\n  class={{this.classNames}}\\n  @current-when={{@current-when}}\\n  @models={{hds-link-to-models @model @models}}\\n  @query={{hds-link-to-query @query}}\\n  @replace={{@replace}}\\n  @route={{@route}}\\n  @isRouteExternal={{@isRouteExternal}}\\n  @href={{@href}}\\n  @isHrefExternal={{@isHrefExternal}}\\n  ...attributes\\n>\\n  {{#if (eq this.iconPosition \\\"leading\\\")}}\\n    <span class=\\\"hds-link-standalone__icon\\\">\\n      <FlightIcon @name={{this.icon}} @size={{this.iconSize}} @stretched={{true}} />\\n    </span>\\n    <span class=\\\"hds-link-standalone__text\\\">\\n      {{this.text}}\\n    </span>\\n  {{else}}\\n    <span class=\\\"hds-link-standalone__text\\\">\\n      {{this.text}}\\n    </span>\\n    <span class=\\\"hds-link-standalone__icon\\\">\\n      <FlightIcon @name={{this.icon}} @size={{this.iconSize}} @stretched={{true}} />\\n    </span>\\n  {{/if}}\\n</Hds::Interactive>\")","/**\n * Copyright (c) HashiCorp, Inc.\n * SPDX-License-Identifier: MPL-2.0\n */\n\nimport Component from '@glimmer/component';\nimport { assert } from '@ember/debug';\n\nexport const DEFAULT_ICONPOSITION = 'leading';\nexport const DEFAULT_COLOR = 'primary';\nexport const DEFAULT_SIZE = 'medium';\nexport const ICONPOSITIONS = ['leading', 'trailing'];\nexport const COLORS = ['primary', 'secondary'];\nexport const SIZES = ['small', 'medium', 'large'];\n\nexport default class HdsLinkStandaloneComponent extends Component {\n  constructor() {\n    super(...arguments);\n    if (!(this.args.href || this.args.route)) {\n      assert('@href or @route must be defined for <Hds::Link::Standalone>');\n    }\n  }\n\n  /**\n   * @param text\n   * @type {string}\n   * @description The text of the link. If no text value is defined an error will be thrown.\n   */\n  get text() {\n    let { text } = this.args;\n\n    assert(\n      '@text for \"Hds::Link::Standalone\" must have a valid value',\n      text !== undefined\n    );\n\n    return text;\n  }\n\n  /**\n   * @param color\n   * @type {string}\n   * @default primary\n   * @description Determines the color of link to be used; acceptable values are `primary` and `secondary`\n   */\n  get color() {\n    let { color = DEFAULT_COLOR } = this.args;\n\n    assert(\n      `@color for \"Hds::Link::Standalone\" must be one of the following: ${COLORS.join(\n        ', '\n      )}; received: ${color}`,\n      COLORS.includes(color)\n    );\n\n    return color;\n  }\n\n  /**\n   * @param icon\n   * @type {string|null}\n   * @default null\n   * @description The name of the icon to be used. An icon name must be defined.\n   */\n  get icon() {\n    let { icon } = this.args;\n\n    assert(\n      '@icon for \"Hds::Link::Standalone\" must have a valid value',\n      icon !== undefined\n    );\n\n    return icon;\n  }\n\n  /**\n   * @param iconPosition\n   * @type {string}\n   * @default leading\n   * @description Positions the icon before or after the text; allowed values are `leading` or `trailing`\n   */\n  get iconPosition() {\n    let { iconPosition = DEFAULT_ICONPOSITION } = this.args;\n\n    assert(\n      `@iconPosition for \"Hds::Link::Standalone\" must be one of the following: ${ICONPOSITIONS.join(\n        ', '\n      )}; received: ${iconPosition}`,\n      ICONPOSITIONS.includes(iconPosition)\n    );\n\n    return iconPosition;\n  }\n\n  /**\n   * @param size\n   * @type {string}\n   * @default medium\n   * @description The size of the standalone link; acceptable values are `small`, `medium`, and `large`\n   */\n  get size() {\n    let { size = DEFAULT_SIZE } = this.args;\n\n    assert(\n      `@size for \"Hds::Link::Standalone\" must be one of the following: ${SIZES.join(\n        ', '\n      )}; received: ${size}`,\n      SIZES.includes(size)\n    );\n\n    return size;\n  }\n\n  /**\n   * @param iconSize\n   * @type {string}\n   * @default 16\n   * @description ensures that the correct icon size is used. Automatically calculated.\n   */\n  get iconSize() {\n    if (this.args.size === 'large') {\n      return '24';\n    } else {\n      return '16';\n    }\n  }\n\n  /**\n   * Get the class names to apply to the component.\n   * @method LinkStandalone#classNames\n   * @return {string} The \"class\" attribute to apply to the component.\n   */\n  get classNames() {\n    let classes = ['hds-link-standalone'];\n\n    // add a class based on the @size argument\n    classes.push(`hds-link-standalone--size-${this.size}`);\n\n    // add a class based on the @color argument\n    classes.push(`hds-link-standalone--color-${this.color}`);\n\n    // add a class based on the @iconPosition argument\n    classes.push(`hds-link-standalone--icon-position-${this.iconPosition}`);\n\n    return classes.join(' ');\n  }\n}\n"],"names":["DEFAULT_ICONPOSITION","DEFAULT_COLOR","DEFAULT_SIZE","ICONPOSITIONS","COLORS","SIZES","HdsLinkStandaloneComponent","Component","constructor","arguments","args","href","route","assert","text","undefined","color","join","includes","icon","iconPosition","size","iconSize","classNames","classes","push","setComponentTemplate","TEMPLATE"],"mappings":"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"}